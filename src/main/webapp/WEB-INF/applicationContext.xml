<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">
    <!-- 引入配置文件 -->  
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="locations">
			<list>
			  <value>classpath:config.properties</value>
			</list>
		</property>
	</bean>
	<bean id="configPropertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="order" value="2" />  
        <property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="properties" ref="configProperties"/>
    </bean>
    <!-- <bean id="configPropertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="order" value="2" />  
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
			<list> 
				<value>classpath:config.properties</value>
			</list>
		</property>  
    </bean> -->  
  
    <!--配置全局变量-->
    <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="singleton" value="true"/>
        <property name="properties">
              <props>
              		<prop key="csdn.url">${csdn.url}</prop>
              </props>
        </property>
    </bean>
   
    <!-- 工作的bean -->
    <!-- <bean id="myJob" class="com.test.test.Myjob" />
    <bean id="myJob2" class="com.test.test.Myjob2" /> -->
    
    <!-- job的配置开始 -->
    <!-- <bean id="myJobDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob" />
        </property>
        <property name="targetMethod">
            <value>work</value>
        </property>
    </bean>
    <bean id="myJobDetail2"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="myJob2" />
        </property>
        <property name="targetMethod">
            <value>work</value>
        </property>
    </bean> -->
    <!-- job的配置结束 -->
 
    <!-- 调度的配置 -->
    <!-- <bean id="myJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="myJobDetail" />
        </property>
        每天下午的 4点到4点59分每分触发
        <property name="cronExpression">
            <value>*/20 * * * * ?</value>
        </property>
    </bean>
    <bean id="myJobTrigger2"
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="myJobDetail2" />
        </property>
        每天12点触发
        <property name="cronExpression">
            <value>*/20 * * * * ?</value>
        </property>
    </bean> -->
    <!-- 调度的配置结束 -->
     
    <!-- 启动触发器的配置开始 -->
    <!-- <bean name="startQuertz" lazy-init="false" autowire="no"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="myJobTrigger"/>
                <ref bean="myJobTrigger2"/>
            </list>
        </property>
    </bean> -->
    <!-- 启动触发器的配置结束 -->
    
</beans>  